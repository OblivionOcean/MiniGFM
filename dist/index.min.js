class MiniGFM{t={$:"&amp;",i:"&lt;",l:"&gt;",g:"&quot;",o:"&#39;",h:"&#96;"};constructor(t){this.options=t||{}}parse(t){t=this.escape(t),this.options.unsafe||(t=this.p(t));let n=[],r=[];return t=(t=(t=t.replace(/(?:^|\n)(`{3,4})([A-Za-z0-9]*?)\n([\s\S]*?)\n\1/g,(t,e,r,s)=>(n.push({lang:r,code:s.trim()}),`<!----CODEBLOCK${n.length-1}---->`))).replace(/`([^`]+)`/g,(t,e)=>(r.push(e),`<!----CODEINLINE${r.length-1}---->`))).replace(/\%\%(\n| )[^%]+(\n| )\%\%/gm,""),t=this.u(t),t=(t=(t=this.m(t)).replace(/<!----CODEINLINE(\d+)---->/g,(t,e)=>r[parseInt(e)]?`<code>${r[parseInt(e)]}</code>`:"")).replace(/<!----CODEBLOCK(\d+)---->/g,(t,e)=>n[parseInt(e)]?((e=n[parseInt(e)]).lang=e.lang.trim(),e.lang?(this.options.hljs&&(e.code=this.options.hljs.highlight(e.code,{language:e.lang}).value),`<pre><code class="hljs ${e.lang} lang-${e.lang}">${e.code}</code></pre>`):(this.options.hljs&&(e.code=this.options.hljs.highlightAuto(e.code).value),`<pre><code>${e.code}</code></pre>`)):"")}escape(t){return t.replace(/\\([\\`*_{}[\]()#+\-.!])/g,"$1")}u(t){return(t=(t=(t=(t=(t=(t=(t=t.replace(/^[^\\]\s*(#{1,6}) (.+)$/gm,(t,e,r)=>`<h${e.length}>${r}</h${e.length}>`)).replace(/^[ \t]*[-\*\+] \[([ xX]?)\]\s([^-\_\*]+)$/gm,(t,e,r,s)=>e+`<li><input type="checkbox" ${"x"===r.trim().toLowerCase()?"checked":""} disabled> ${s}</li>`)).replace(/^[ \t]*[-\*\+] ([^-\_\*]+)$/gm,(t,e)=>`<li>${e}</li>`)).replace(/^[ \t]*(\d+)\. ([^-\_\*]+)$/gm,(t,e,r)=>`<li>${e}. ${r}</li>`)).replace(/^ {0,3}(([*_-])( *\2 *){2,})(?:\s*$|$)/gm,()=>"<hr>")).replace(/^((?:\&gt\; ?)+)( *.*)$/gm,(t,e,r)=>{e=e.replaceAll("&gt;",">").length;return"<blockquote>".repeat(e)+r+"</blockquote>".repeat(e)})).replace(/^([^\n]*\|[^\n]*)\n([-:| ]+\|)+[-\| ]*\n((?:[^\n]*\|[^\n]*(?:\n|$))*)/gm,(t,e,r,s)=>this.I(e,r,s))).split(/\\\n|\n{2,}/g).map(t=>t.startsWith("<")||t.match(/^<[a-z]+/i)?t:`<p>${t}</p>`).join("<br />")}I(t,e,r){var s=t.split("|").map(t=>t.trim()).filter(t=>t);let n=this._(e);var a,$=[];for(a of r.trim().split("\n"))if(a.match(this.patterns.tableRow)){var i=a.split("|").map(t=>t.trim()),l=[];for(let t=0;t<s.length;t++)l.push(i[t]||"");$.push(l)}let g="<table>";return g+="<thead><tr>",s.forEach((t,e)=>{e=n[e]?` align="${n[e]}"`:"";g+=`<th${e}>${t}</th>`}),g+="</tr></thead>",0<$.length&&(g+="<tbody>",$.forEach(t=>{g+="<tr>",t.forEach((t,e)=>{e=n[e]?` align="${n[e]}"`:"";g+=`<td${e}>${t}</td>`}),g+="</tr>"}),g+="</tbody>"),g+="</table>"}_(t){var e,r=[];for(e of t.split("|").map(t=>t.trim()))e&&(e.startsWith(":")&&e.endsWith(":")?r.push("center"):e.startsWith(":")?r.push("left"):e.endsWith(":")?r.push("right"):r.push(null));return r}m(t){return t=(t=(t=(t=(t=(t=(t=t.replace(/[\*\_]{2}(.+?)[\*\_]{2}/g,"<strong>$1</strong>")).replace(/(?<!\*)_(.+?)_(?!\*)|(?<!\*)\*(.+?)\*(?!\*)/,(t,e,r)=>`<em>${e||r}</em>`)).replace(/~~(.+?)~~/g,"<del>$1</del>")).replace(/<((?:https?:\/\/|ftp:\/\/|mailto:|tel:)[^>\s]+)>/g,'<a href="$1">$1</a>')).replace(this.patterns.autoEmail,'<a href="mailto:$1">$1</a>')).replace(/\!\[([^\]]*)\]\(([^\)]+)\)/g,'<img src="$2" alt="$1"></img>')).replace(/\[([^\]]+)\]\(([^\) ]+)[ ]?(\&quot\;[^\)\"]+\&quot\;)?\)/g,(t,e,r,s)=>`<a href="${r}"${s?" title="+s.replaceAll("&quot;",'"'):""}>${e}</a>`)}p(t){return t.replace(/[&<>"']/g,t=>this.t[t])}}"object"==typeof exports&&(module.exports={MiniGFM:MiniGFM});