class MiniGFM{patterns={codeBlock:/(?:^|\n)(`{3,4})([A-Za-z0-9]*?)\n([\s\S]*?)\n\1/g,inlineCode:/`([^`]+)`/g,bold:/[\*\_]{2}(.+?)[\*\_]{2}/g,italic:/(?<!\*)_(.+?)_(?!\*)|(?<!\*)\*(.+?)\*(?!\*)/g,strike:/~~(.+?)~~/g,heading:/^[^\\]\s*(#{1,6}) (.+)$/gm,unorderedList:/^[ \t]*[-\*\+] ([^-\_\*]+)$/gm,orderedList:/^[ \t]*(\d+)\. ([^-\_\*]+)$/gm,taskList:/^[ \t]*[-\*\+] \[([ xX]?)\]\s([^-\_\*]+)$/gm,blockquote:/^((?:\&gt\; ?)+)( *.*)$/gm,table:/^([^\n]*\|[^\n]*)\n([-:| ]+\|)+[-\| ]*\n((?:[^\n]*\|[^\n]*(?:\n|$))*)/gm,link:/\[([^\]]+)\]\(([^\) ]+)[ ]?(\&quot\;[^\)\"]+\&quot\;)?\)/g,image:/\!\[([^\]]*)\]\(([^\)]+)\)/g,autoLink:/<((?:https?:\/\/|ftp:\/\/|mailto:|tel:)[^>\s]+)>/g,autoEmail:/<([^\s@]+@[^\s@]+\.[^\s@]+)>/g,hr:/^ {0,3}(([*_-])( *\2 *){2,})(?:\s*$|$)/gm,escape:/\\([\\`*_{}[\]()#+\-.!])/g,note:/\%\%(\n| )[^%]+(\n| )\%\%/gm,paragraphSplit:/\\\n|\n{2,}/g};escapeMap={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#96;"};constructor(t){this.options=t||{}}parse(t){t=this.escape(t),this.options.unsafe||(t=this.escapeHTML(t));let r=[],a=[];return t=(t=(t=t.replace(this.patterns.codeBlock,(t,e,a,s)=>(r.push({lang:a,code:s.trim()}),`<!----CODEBLOCK${r.length-1}---->`))).replace(this.patterns.inlineCode,(t,e)=>(a.push(e),`<!----CODEINLINE${a.length-1}---->`))).replace(this.patterns.note,""),t=this.parseBlocks(t),t=(t=(t=this.parseInlines(t)).replace(/<!----CODEINLINE(\d+)---->/g,(t,e)=>a[parseInt(e)]?`<code>${a[parseInt(e)]}</code>`:"")).replace(/<!----CODEBLOCK(\d+)---->/g,(t,e)=>r[parseInt(e)]?((e=r[parseInt(e)]).lang=e.lang.trim(),e.lang?(this.options.hljs&&(e.code=this.options.hljs.highlight(e.code,{language:e.lang}).value),`<pre><code class="hljs ${e.lang} lang-${e.lang}">${e.code}</code></pre>`):(this.options.hljs&&(e.code=this.options.hljs.highlightAuto(e.code).value),`<pre><code>${e.code}</code></pre>`)):"")}escape(t){return t.replace(this.patterns.escape,"$1")}parseBlocks(t){return(t=(t=(t=(t=(t=(t=(t=t.replace(this.patterns.heading,(t,e,a)=>`<h${e.length}>${a}</h${e.length}>`)).replace(this.patterns.taskList,(t,e,a,s)=>e+`<li><input type="checkbox" ${"x"===a.trim().toLowerCase()?"checked":""} disabled> ${s}</li>`)).replace(this.patterns.unorderedList,(t,e)=>`<li>${e}</li>`)).replace(this.patterns.orderedList,(t,e,a)=>`<li>${e}. ${a}</li>`)).replace(this.patterns.hr,()=>"<hr>")).replace(this.patterns.blockquote,(t,e,a)=>{e=e.replaceAll("&gt;",">").length;return"<blockquote>".repeat(e)+a+"</blockquote>".repeat(e)})).replace(this.patterns.table,(t,e,a,s)=>this.parseTable(e,a,s))).split(this.patterns.paragraphSplit).map(t=>t.startsWith("<")||t.match(/^<[a-z]+/i)?t:`<p>${t}</p>`).join("<br />")}parseTable(t,e,a){var s=t.split("|").map(t=>t.trim()).filter(t=>t);let r=this.parseTableAlignment(e);var i,l=[];for(i of a.trim().split("\n"))if(i.match(this.patterns.tableRow)){var p=i.split("|").map(t=>t.trim()),n=[];for(let t=0;t<s.length;t++)n.push(p[t]||"");l.push(n)}let h="<table>";return h+="<thead><tr>",s.forEach((t,e)=>{e=r[e]?` align="${r[e]}"`:"";h+=`<th${e}>${t}</th>`}),h+="</tr></thead>",0<l.length&&(h+="<tbody>",l.forEach(t=>{h+="<tr>",t.forEach((t,e)=>{e=r[e]?` align="${r[e]}"`:"";h+=`<td${e}>${t}</td>`}),h+="</tr>"}),h+="</tbody>"),h+="</table>"}parseTableAlignment(t){var e,a=[];for(e of t.split("|").map(t=>t.trim()))e&&(e.startsWith(":")&&e.endsWith(":")?a.push("center"):e.startsWith(":")?a.push("left"):e.endsWith(":")?a.push("right"):a.push(null));return a}parseInlines(t){return t=(t=(t=(t=(t=(t=(t=t.replace(this.patterns.bold,"<strong>$1</strong>")).replace(this.patterns.italic,(t,e,a)=>`<em>${e||a}</em>`)).replace(this.patterns.strike,"<del>$1</del>")).replace(this.patterns.autoLink,'<a href="$1">$1</a>')).replace(this.patterns.autoEmail,'<a href="mailto:$1">$1</a>')).replace(this.patterns.image,'<img src="$2" alt="$1"></img>')).replace(this.patterns.link,(t,e,a,s)=>`<a href="${a}"${s?" title="+s.replaceAll("&quot;",'"'):""}>${e}</a>`)}escapeHTML(t){return t.replace(/[&<>"']/g,t=>this.escapeMap[t])}}"object"==typeof exports&&(module.exports={MiniGFM:MiniGFM});